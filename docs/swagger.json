{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/availabilities": {
            "get": {
                "description": "Get availabilities by single date or date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "availability"
                ],
                "summary": "Get availabilities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Capability",
                        "name": "Capability",
                        "in": "header"
                    },
                    {
                        "description": "Request Payload",
                        "name": "AvailabilityPayload_Rq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AvailabilityPayload_Rq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AvailabilityPayload_Rs_Pricing"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/availabilities/add": {
            "post": {
                "description": "Adds availabilities for a product within a single date or date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "availability"
                ],
                "summary": "Add availabilities",
                "parameters": [
                    {
                        "description": "Request Payload for Adding Availabilities",
                        "name": "AvailabilityNewPayload_Rq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AvailabilityNewPayload_Rq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bookings/all": {
            "get": {
                "description": "Retrieves all bookings, with the option to filter by pricing mode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "summary": "Get all bookings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Capability to filter by pricing mode",
                        "name": "Capability",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Return all bookings in pricing mode",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Booking"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bookings/confirm/{id}": {
            "put": {
                "description": "Confirms a booking by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "summary": "Confirm a booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID to confirm",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking confirmed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Booking not found after confirmation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bookings/post": {
            "post": {
                "description": "Creates a new booking and updates the availability accordingly",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "summary": "Post a booking",
                "parameters": [
                    {
                        "description": "Request Payload for Posting a Booking",
                        "name": "BookingPayload_Rq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BookingPayload_Rq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Booking successfully created",
                        "schema": {
                            "$ref": "#/definitions/model.Booking"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "description": "Fetches a booking by its ID, with the option to filter by pricing mode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "summary": "Get a booking by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Capability to filter by pricing mode",
                        "name": "Capability",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Return booking in pricing mode",
                        "schema": {
                            "$ref": "#/definitions/model.Booking"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Retrieves all products, with the option to filter by pricing mode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get all products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Capability to filter by pricing mode",
                        "name": "Capability",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Return all products in pricing mode",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products/add": {
            "post": {
                "description": "Adds a new product to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Add a product",
                "parameters": [
                    {
                        "description": "Request Payload for Adding a Product",
                        "name": "ProductPayload_Rq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProductPayload_Rq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Fetches a product by its ID, with the option to filter by pricing mode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get a product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Capability to filter by pricing mode",
                        "name": "Capability",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Return product in pricing mode",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AvailabilityNewPayload_Rq": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "localDate": {
                    "type": "string"
                },
                "localDateEnd": {
                    "type": "string"
                },
                "localDateStart": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "productId": {
                    "type": "string"
                }
            }
        },
        "model.AvailabilityPayload_Rq": {
            "type": "object",
            "properties": {
                "localDate": {
                    "type": "string"
                },
                "localDateEnd": {
                    "type": "string"
                },
                "localDateStart": {
                    "type": "string"
                }
            }
        },
        "model.AvailabilityPayload_Rs_Pricing": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "localDate": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "productName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vacancies": {
                    "type": "integer"
                }
            }
        },
        "model.Booking": {
            "type": "object",
            "properties": {
                "availabilityId": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "units": {
                    "type": "integer"
                }
            }
        },
        "model.BookingPayload_Rq": {
            "type": "object",
            "properties": {
                "availabilityId": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "units": {
                    "type": "integer"
                }
            }
        },
        "model.BookingPayload_Rs_NonPricing": {
            "type": "object",
            "properties": {
                "availabilityId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "units": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BookingUnitPayload_Rs_NonPricing"
                    }
                }
            }
        },
        "model.BookingUnitPayload_Rs_NonPricing": {
            "type": "object",
            "properties": {
                "bookingId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.Product": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "model.ProductPayload_Rq": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "model.ProductPayload_Rs_NonPricing": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}